Call on packages
library(caret)
library(randomForest)

#Pre-processing if I haven't already.
CompletedSurvey <- read_csv("~/Desktop/Customer Survey/Survey Complete Results.csv", col_names = FALSE, skip = 2)
names(CompletedSurvey) <- c("Salary","Age","Elevel","Car","Zipcode","Credit","Brand")
CompletedSurvey[is.na(CompletedSurvey$Salary)] <- mean(CompletedSurvey$Salary, na.rm = TRUE)
CompletedSurvey[is.na(CompletedSurvey$Age)] <- mean(CompletedSurvey$Age, na.rm = TRUE)
CompletedSurvey[is.na(CompletedSurvey$Age)] <- mean(CompletedSurvey$Credit, na.rm = TRUE)
cor(CompletedSurvey)
View(CompletedSurvey)
str(CompletedSurvey)
correlationMatrix <- cor(CompletedSurvey)
correlationMatrix
CompletedSurvey$Elevel<- NULL
CompletedSurvey$Zipcode<- NULL
CompletedSurvey$Car<- NULL
CompletedSurvey$Brand <- as.factor(CompletedSurvey$Brand)

#create training and test sets
set.seed(123)
inTrain<- createDataPartition(y = CompletedSurvey$Brand, p=.75, list = FALSE)
str(inTrain)
training<- CompletedSurvey[inTrain,]
testing<- CompletedSurvey[-inTrain,]
nrow(training)
nrow(testing)

#Caret Pre-Processing
fitControl <- trainControl(method="repeatedcv", number=10, repeats=3)
mtry<-sqrt(ncol(training))
RFgrid<-expand.grid(.mtry = mtry)
RFgrid

#Run RF Model
RFModel<- train(Brand~.,data=training,method =  "rf", tuneGrid = RFgrid, trControl = fitControl,metric="Accuracy")

#View Model
print(RFModel)

#Predict Brand preferences
#Predictions using traingset
Predictions1<- predict(RFModel, newdata=training)
ConfusionMatrix1<-confusionMatrix(RFModel,newdata=training)
ConfusionMatrix1

summary(Predictions1)

#Predictions using testset
Predictions2<- predict(RFModel, newdata=testing)
ConfusionMatrix2<-confusionMatrix(RFModel,newdata=testing)

summary(Predictions2)
